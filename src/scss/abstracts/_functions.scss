// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
@function asset($base, $type, $path) {
    @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: $base-url) {
  @return asset($base, 'images/', $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: $base-url) {
  @return asset($base, 'fonts/', $path);
}

/// Returns convertion value from PX tp VW
/// @param {Number} $target - PX value example: get-vw(87.5px)
@function get-vw($target) {
  $vw-context: (1602 * 0.01) * 1px; //1920
  @return ($target / $vw-context) * 1vw;
}

/// Returns convertion value from PX tp VH
/// @param {Number} $target - PX value example: get-vw(87.5px)
@function get-vh($target) {
  $vh-context: (604 * 0.01) * 1px; // 950
  @return ($target / $vh-context) * 1vh;
}